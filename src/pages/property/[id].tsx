import { PrismaClient } from "@prisma/client";
import { GetStaticPaths, GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import { ParsedUrlQuery } from "querystring";

import { Property } from "../../types/property";

import { formatPrice } from "../../utils/property";

import Nav from "../../components/Nav";
import GoBackButton from "../../components/UI/GoBackButton";

type Props = {
  property?: Property;
};

const PropertyDetail: NextPage = ({ property }: Props) => {
  return (
    <>
      <Head>
        <title>Propiedad detalle</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav />
      <main className="mx-auto max-w-screen-lg bg-gray-700">
        <GoBackButton />
        <section>
          <div>
            <iframe
              width="1024"
              height="480"
              src="https://my.matterport.com/show/?m=KpBQUvEMirJ"
              allow="xr-spatial-tracking"
            ></iframe>
          </div>
          <p className="pt-4 font-semibold">
            {property?.address}{" "}
            <span className="text-base font-normal text-gray-400">
              departamento San Juan
            </span>
          </p>
          <p>{property?.operation}</p>
          <div className="flex items-center gap-4">
            <p className="text-xl font-bold">
              {formatPrice(property?.price ?? 0)}
            </p>
            <p className="ml-12">{property?.ambiences}</p>
            <p>{property?.bathrooms}</p>
            <p>Superficie: {property?.extraInfo?.surface}</p>
          </div>
          MAPA
          <div className="py-4">
            <p className="font-bold">Descripción:</p>
            <p>{property?.extraInfo?.description}</p>
          </div>
          <p>Año construcción: {property?.extraInfo?.buildYear}</p>
          <div className="py-4">
            <p className="font-bold">Destacados:</p>
            <div className="grid grid-cols-2 ">
              <p>Garage: {property?.extraInfo?.parking ? "SI" : "NO"}</p>
              <p>Mascotas: {property?.extraInfo?.petsAllowed ? "SI" : "NO"}</p>
              <p>A/C: {property?.extraInfo?.airConditioning ? "SI" : "NO"}</p>
              <p>Comodidades:</p>
            </div>
          </div>
        </section>
      </main>
    </>
  );
};

interface IParams extends ParsedUrlQuery {
  id: string;
}

export const getStaticProps: GetStaticProps = async (context) => {
  const prisma = new PrismaClient();
  const { id } = context.params as IParams;
  const property = await prisma?.property.findUnique({
    where: { id },
    include: { extraInfo: true },
  });

  return {
    props: {
      property: JSON.parse(JSON.stringify(property)),
    },
    revalidate: 10,
  };
};

export const getStaticPaths: GetStaticPaths<IParams> = async () => {
  const prisma = new PrismaClient();
  const properties = await prisma?.property.findMany({
    select: {
      id: true,
    },
  });

  return {
    paths: properties?.map((property) => ({
      params: {
        id: property.id,
      },
    })),
    fallback: "blocking",
  };
};

export default PropertyDetail;
